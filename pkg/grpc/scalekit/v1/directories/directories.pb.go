// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: scalekit/v1/directories/directories.proto

package directories

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "github.com/scalekit-inc/scalekit-sdk-go/pkg/grpc/scalekit/v1/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DirectoryType int32

const (
	DirectoryType_DIRECTORY_TYPE_UNSPECIFIED DirectoryType = 0
	DirectoryType_SCIM                       DirectoryType = 1
	DirectoryType_LDAP                       DirectoryType = 2
	DirectoryType_POLL                       DirectoryType = 3
)

// Enum value maps for DirectoryType.
var (
	DirectoryType_name = map[int32]string{
		0: "DIRECTORY_TYPE_UNSPECIFIED",
		1: "SCIM",
		2: "LDAP",
		3: "POLL",
	}
	DirectoryType_value = map[string]int32{
		"DIRECTORY_TYPE_UNSPECIFIED": 0,
		"SCIM":                       1,
		"LDAP":                       2,
		"POLL":                       3,
	}
)

func (x DirectoryType) Enum() *DirectoryType {
	p := new(DirectoryType)
	*p = x
	return p
}

func (x DirectoryType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DirectoryType) Descriptor() protoreflect.EnumDescriptor {
	return file_scalekit_v1_directories_directories_proto_enumTypes[0].Descriptor()
}

func (DirectoryType) Type() protoreflect.EnumType {
	return &file_scalekit_v1_directories_directories_proto_enumTypes[0]
}

func (x DirectoryType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DirectoryType.Descriptor instead.
func (DirectoryType) EnumDescriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{0}
}

type DirectoryProvider int32

const (
	DirectoryProvider_DIRECTORY_PROVIDER_UNSPECIFIED DirectoryProvider = 0
	DirectoryProvider_OKTA                           DirectoryProvider = 1
	DirectoryProvider_GOOGLE                         DirectoryProvider = 2
	DirectoryProvider_MICROSOFT_AD                   DirectoryProvider = 3
	DirectoryProvider_AUTH0                          DirectoryProvider = 4
	DirectoryProvider_ONELOGIN                       DirectoryProvider = 5
	DirectoryProvider_JUMPCLOUD                      DirectoryProvider = 6
	DirectoryProvider_PING_IDENTITY                  DirectoryProvider = 7
)

// Enum value maps for DirectoryProvider.
var (
	DirectoryProvider_name = map[int32]string{
		0: "DIRECTORY_PROVIDER_UNSPECIFIED",
		1: "OKTA",
		2: "GOOGLE",
		3: "MICROSOFT_AD",
		4: "AUTH0",
		5: "ONELOGIN",
		6: "JUMPCLOUD",
		7: "PING_IDENTITY",
	}
	DirectoryProvider_value = map[string]int32{
		"DIRECTORY_PROVIDER_UNSPECIFIED": 0,
		"OKTA":                           1,
		"GOOGLE":                         2,
		"MICROSOFT_AD":                   3,
		"AUTH0":                          4,
		"ONELOGIN":                       5,
		"JUMPCLOUD":                      6,
		"PING_IDENTITY":                  7,
	}
)

func (x DirectoryProvider) Enum() *DirectoryProvider {
	p := new(DirectoryProvider)
	*p = x
	return p
}

func (x DirectoryProvider) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DirectoryProvider) Descriptor() protoreflect.EnumDescriptor {
	return file_scalekit_v1_directories_directories_proto_enumTypes[1].Descriptor()
}

func (DirectoryProvider) Type() protoreflect.EnumType {
	return &file_scalekit_v1_directories_directories_proto_enumTypes[1]
}

func (x DirectoryProvider) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DirectoryProvider.Descriptor instead.
func (DirectoryProvider) EnumDescriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{1}
}

type DirectoryStatus int32

const (
	DirectoryStatus_DIRECTORY_STATUS_UNSPECIFIED DirectoryStatus = 0
	DirectoryStatus_DRAFT                        DirectoryStatus = 1
	DirectoryStatus_IN_PROGRESS                  DirectoryStatus = 2
	DirectoryStatus_COMPLETED                    DirectoryStatus = 3
)

// Enum value maps for DirectoryStatus.
var (
	DirectoryStatus_name = map[int32]string{
		0: "DIRECTORY_STATUS_UNSPECIFIED",
		1: "DRAFT",
		2: "IN_PROGRESS",
		3: "COMPLETED",
	}
	DirectoryStatus_value = map[string]int32{
		"DIRECTORY_STATUS_UNSPECIFIED": 0,
		"DRAFT":                        1,
		"IN_PROGRESS":                  2,
		"COMPLETED":                    3,
	}
)

func (x DirectoryStatus) Enum() *DirectoryStatus {
	p := new(DirectoryStatus)
	*p = x
	return p
}

func (x DirectoryStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DirectoryStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_scalekit_v1_directories_directories_proto_enumTypes[2].Descriptor()
}

func (DirectoryStatus) Type() protoreflect.EnumType {
	return &file_scalekit_v1_directories_directories_proto_enumTypes[2]
}

func (x DirectoryStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DirectoryStatus.Descriptor instead.
func (DirectoryStatus) EnumDescriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{2}
}

type SecretStatus int32

const (
	SecretStatus_ACTIVE   SecretStatus = 0
	SecretStatus_INACTIVE SecretStatus = 1
)

// Enum value maps for SecretStatus.
var (
	SecretStatus_name = map[int32]string{
		0: "ACTIVE",
		1: "INACTIVE",
	}
	SecretStatus_value = map[string]int32{
		"ACTIVE":   0,
		"INACTIVE": 1,
	}
)

func (x SecretStatus) Enum() *SecretStatus {
	p := new(SecretStatus)
	*p = x
	return p
}

func (x SecretStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_scalekit_v1_directories_directories_proto_enumTypes[3].Descriptor()
}

func (SecretStatus) Type() protoreflect.EnumType {
	return &file_scalekit_v1_directories_directories_proto_enumTypes[3]
}

func (x SecretStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretStatus.Descriptor instead.
func (SecretStatus) EnumDescriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{3}
}

type GetDirectoryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetDirectoryRequest) Reset() {
	*x = GetDirectoryRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDirectoryRequest) ProtoMessage() {}

func (x *GetDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDirectoryRequest.ProtoReflect.Descriptor instead.
func (*GetDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{0}
}

func (x *GetDirectoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDirectoryRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type GetDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Directory     *Directory             `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDirectoryResponse) Reset() {
	*x = GetDirectoryResponse{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDirectoryResponse) ProtoMessage() {}

func (x *GetDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDirectoryResponse.ProtoReflect.Descriptor instead.
func (*GetDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{1}
}

func (x *GetDirectoryResponse) GetDirectory() *Directory {
	if x != nil {
		return x.Directory
	}
	return nil
}

type CreateDirectoryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Directory      *CreateDirectory       `protobuf:"bytes,2,opt,name=directory,proto3" json:"directory,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDirectoryRequest) Reset() {
	*x = CreateDirectoryRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirectoryRequest) ProtoMessage() {}

func (x *CreateDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirectoryRequest.ProtoReflect.Descriptor instead.
func (*CreateDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDirectoryRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateDirectoryRequest) GetDirectory() *CreateDirectory {
	if x != nil {
		return x.Directory
	}
	return nil
}

type CreateDirectory struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	DirectoryType     DirectoryType          `protobuf:"varint,1,opt,name=directory_type,json=directoryType,proto3,enum=scalekit.v1.directories.DirectoryType" json:"directory_type,omitempty"`
	DirectoryProvider DirectoryProvider      `protobuf:"varint,2,opt,name=directory_provider,json=directoryProvider,proto3,enum=scalekit.v1.directories.DirectoryProvider" json:"directory_provider,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CreateDirectory) Reset() {
	*x = CreateDirectory{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirectory) ProtoMessage() {}

func (x *CreateDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirectory.ProtoReflect.Descriptor instead.
func (*CreateDirectory) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{3}
}

func (x *CreateDirectory) GetDirectoryType() DirectoryType {
	if x != nil {
		return x.DirectoryType
	}
	return DirectoryType_DIRECTORY_TYPE_UNSPECIFIED
}

func (x *CreateDirectory) GetDirectoryProvider() DirectoryProvider {
	if x != nil {
		return x.DirectoryProvider
	}
	return DirectoryProvider_DIRECTORY_PROVIDER_UNSPECIFIED
}

type CreateDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Directory     *Directory             `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDirectoryResponse) Reset() {
	*x = CreateDirectoryResponse{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirectoryResponse) ProtoMessage() {}

func (x *CreateDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirectoryResponse.ProtoReflect.Descriptor instead.
func (*CreateDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{4}
}

func (x *CreateDirectoryResponse) GetDirectory() *Directory {
	if x != nil {
		return x.Directory
	}
	return nil
}

type UpdateDirectoryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Directory      *UpdateDirectory       `protobuf:"bytes,3,opt,name=directory,proto3" json:"directory,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateDirectoryRequest) Reset() {
	*x = UpdateDirectoryRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDirectoryRequest) ProtoMessage() {}

func (x *UpdateDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDirectoryRequest.ProtoReflect.Descriptor instead.
func (*UpdateDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateDirectoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateDirectoryRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *UpdateDirectoryRequest) GetDirectory() *UpdateDirectory {
	if x != nil {
		return x.Directory
	}
	return nil
}

type UpdateDirectory struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DirectoryType     DirectoryType          `protobuf:"varint,3,opt,name=directory_type,json=directoryType,proto3,enum=scalekit.v1.directories.DirectoryType" json:"directory_type,omitempty"`
	Enabled           bool                   `protobuf:"varint,7,opt,name=enabled,proto3" json:"enabled,omitempty"`
	DirectoryProvider DirectoryProvider      `protobuf:"varint,8,opt,name=directory_provider,json=directoryProvider,proto3,enum=scalekit.v1.directories.DirectoryProvider" json:"directory_provider,omitempty"`
	Status            DirectoryStatus        `protobuf:"varint,9,opt,name=status,proto3,enum=scalekit.v1.directories.DirectoryStatus" json:"status,omitempty"`
	Mappings          []*DirectoryMapping    `protobuf:"bytes,10,rep,name=mappings,proto3" json:"mappings,omitempty"`
	Groups            []*ExternalGroup       `protobuf:"bytes,15,rep,name=groups,proto3" json:"groups,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateDirectory) Reset() {
	*x = UpdateDirectory{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDirectory) ProtoMessage() {}

func (x *UpdateDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDirectory.ProtoReflect.Descriptor instead.
func (*UpdateDirectory) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateDirectory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateDirectory) GetDirectoryType() DirectoryType {
	if x != nil {
		return x.DirectoryType
	}
	return DirectoryType_DIRECTORY_TYPE_UNSPECIFIED
}

func (x *UpdateDirectory) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *UpdateDirectory) GetDirectoryProvider() DirectoryProvider {
	if x != nil {
		return x.DirectoryProvider
	}
	return DirectoryProvider_DIRECTORY_PROVIDER_UNSPECIFIED
}

func (x *UpdateDirectory) GetStatus() DirectoryStatus {
	if x != nil {
		return x.Status
	}
	return DirectoryStatus_DIRECTORY_STATUS_UNSPECIFIED
}

func (x *UpdateDirectory) GetMappings() []*DirectoryMapping {
	if x != nil {
		return x.Mappings
	}
	return nil
}

func (x *UpdateDirectory) GetGroups() []*ExternalGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

type UpdateDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Directory     *Directory             `protobuf:"bytes,1,opt,name=directory,proto3" json:"directory,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDirectoryResponse) Reset() {
	*x = UpdateDirectoryResponse{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDirectoryResponse) ProtoMessage() {}

func (x *UpdateDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDirectoryResponse.ProtoReflect.Descriptor instead.
func (*UpdateDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateDirectoryResponse) GetDirectory() *Directory {
	if x != nil {
		return x.Directory
	}
	return nil
}

type AssignGroupsForDirectoryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrganizationId string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	ExternalIds    []string               `protobuf:"bytes,3,rep,name=external_ids,json=externalIds,proto3" json:"external_ids,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AssignGroupsForDirectoryRequest) Reset() {
	*x = AssignGroupsForDirectoryRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignGroupsForDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignGroupsForDirectoryRequest) ProtoMessage() {}

func (x *AssignGroupsForDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignGroupsForDirectoryRequest.ProtoReflect.Descriptor instead.
func (*AssignGroupsForDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{8}
}

func (x *AssignGroupsForDirectoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssignGroupsForDirectoryRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *AssignGroupsForDirectoryRequest) GetExternalIds() []string {
	if x != nil {
		return x.ExternalIds
	}
	return nil
}

type ListDirectoriesRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListDirectoriesRequest) Reset() {
	*x = ListDirectoriesRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoriesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoriesRequest) ProtoMessage() {}

func (x *ListDirectoriesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoriesRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoriesRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{9}
}

func (x *ListDirectoriesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

type ListDirectoriesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Directories   []*Directory           `protobuf:"bytes,1,rep,name=directories,proto3" json:"directories,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoriesResponse) Reset() {
	*x = ListDirectoriesResponse{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoriesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoriesResponse) ProtoMessage() {}

func (x *ListDirectoriesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoriesResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoriesResponse) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{10}
}

func (x *ListDirectoriesResponse) GetDirectories() []*Directory {
	if x != nil {
		return x.Directories
	}
	return nil
}

type ListDirectoryUsersRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId   string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	DirectoryId      string                 `protobuf:"bytes,2,opt,name=directory_id,json=directoryId,proto3" json:"directory_id,omitempty"`
	PageSize         uint32                 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken        string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	IncludeDetail    *bool                  `protobuf:"varint,5,opt,name=include_detail,json=includeDetail,proto3,oneof" json:"include_detail,omitempty"`
	DirectoryGroupId *string                `protobuf:"bytes,6,opt,name=directory_group_id,json=directoryGroupId,proto3,oneof" json:"directory_group_id,omitempty"`
	UpdatedAfter     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_after,json=updatedAfter,proto3,oneof" json:"updated_after,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListDirectoryUsersRequest) Reset() {
	*x = ListDirectoryUsersRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryUsersRequest) ProtoMessage() {}

func (x *ListDirectoryUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryUsersRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoryUsersRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{11}
}

func (x *ListDirectoryUsersRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListDirectoryUsersRequest) GetDirectoryId() string {
	if x != nil {
		return x.DirectoryId
	}
	return ""
}

func (x *ListDirectoryUsersRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDirectoryUsersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDirectoryUsersRequest) GetIncludeDetail() bool {
	if x != nil && x.IncludeDetail != nil {
		return *x.IncludeDetail
	}
	return false
}

func (x *ListDirectoryUsersRequest) GetDirectoryGroupId() string {
	if x != nil && x.DirectoryGroupId != nil {
		return *x.DirectoryGroupId
	}
	return ""
}

func (x *ListDirectoryUsersRequest) GetUpdatedAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAfter
	}
	return nil
}

type ListDirectoryUsersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Users         []*DirectoryUser       `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	TotalSize     uint32                 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	NextPageToken string                 `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	PrevPageToken string                 `protobuf:"bytes,4,opt,name=prev_page_token,json=prevPageToken,proto3" json:"prev_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryUsersResponse) Reset() {
	*x = ListDirectoryUsersResponse{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryUsersResponse) ProtoMessage() {}

func (x *ListDirectoryUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryUsersResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoryUsersResponse) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{12}
}

func (x *ListDirectoryUsersResponse) GetUsers() []*DirectoryUser {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListDirectoryUsersResponse) GetTotalSize() uint32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListDirectoryUsersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListDirectoryUsersResponse) GetPrevPageToken() string {
	if x != nil {
		return x.PrevPageToken
	}
	return ""
}

type ListDirectoryGroupsRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId        string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	DirectoryId           string                 `protobuf:"bytes,2,opt,name=directory_id,json=directoryId,proto3" json:"directory_id,omitempty"`
	PageSize              uint32                 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken             string                 `protobuf:"bytes,4,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	UpdatedAfter          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_after,json=updatedAfter,proto3,oneof" json:"updated_after,omitempty"`
	IncludeDetail         *bool                  `protobuf:"varint,6,opt,name=include_detail,json=includeDetail,proto3,oneof" json:"include_detail,omitempty"`
	IncludeExternalGroups *bool                  `protobuf:"varint,7,opt,name=include_external_groups,json=includeExternalGroups,proto3,oneof" json:"include_external_groups,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ListDirectoryGroupsRequest) Reset() {
	*x = ListDirectoryGroupsRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryGroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryGroupsRequest) ProtoMessage() {}

func (x *ListDirectoryGroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryGroupsRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoryGroupsRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{13}
}

func (x *ListDirectoryGroupsRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListDirectoryGroupsRequest) GetDirectoryId() string {
	if x != nil {
		return x.DirectoryId
	}
	return ""
}

func (x *ListDirectoryGroupsRequest) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListDirectoryGroupsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListDirectoryGroupsRequest) GetUpdatedAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAfter
	}
	return nil
}

func (x *ListDirectoryGroupsRequest) GetIncludeDetail() bool {
	if x != nil && x.IncludeDetail != nil {
		return *x.IncludeDetail
	}
	return false
}

func (x *ListDirectoryGroupsRequest) GetIncludeExternalGroups() bool {
	if x != nil && x.IncludeExternalGroups != nil {
		return *x.IncludeExternalGroups
	}
	return false
}

type ListDirectoryGroupsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Groups        []*DirectoryGroup      `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty"`
	TotalSize     uint32                 `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	NextPageToken string                 `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	PrevPageToken string                 `protobuf:"bytes,4,opt,name=prev_page_token,json=prevPageToken,proto3" json:"prev_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDirectoryGroupsResponse) Reset() {
	*x = ListDirectoryGroupsResponse{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryGroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryGroupsResponse) ProtoMessage() {}

func (x *ListDirectoryGroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryGroupsResponse.ProtoReflect.Descriptor instead.
func (*ListDirectoryGroupsResponse) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{14}
}

func (x *ListDirectoryGroupsResponse) GetGroups() []*DirectoryGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ListDirectoryGroupsResponse) GetTotalSize() uint32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *ListDirectoryGroupsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListDirectoryGroupsResponse) GetPrevPageToken() string {
	if x != nil {
		return x.PrevPageToken
	}
	return ""
}

type ListDirectoryGroupsSummaryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	DirectoryId    string                 `protobuf:"bytes,2,opt,name=directory_id,json=directoryId,proto3" json:"directory_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListDirectoryGroupsSummaryRequest) Reset() {
	*x = ListDirectoryGroupsSummaryRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDirectoryGroupsSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDirectoryGroupsSummaryRequest) ProtoMessage() {}

func (x *ListDirectoryGroupsSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDirectoryGroupsSummaryRequest.ProtoReflect.Descriptor instead.
func (*ListDirectoryGroupsSummaryRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{15}
}

func (x *ListDirectoryGroupsSummaryRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListDirectoryGroupsSummaryRequest) GetDirectoryId() string {
	if x != nil {
		return x.DirectoryId
	}
	return ""
}

type Directory struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	DirectoryType     DirectoryType          `protobuf:"varint,3,opt,name=directory_type,json=directoryType,proto3,enum=scalekit.v1.directories.DirectoryType" json:"directory_type,omitempty"`
	OrganizationId    string                 `protobuf:"bytes,4,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Enabled           bool                   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	DirectoryProvider DirectoryProvider      `protobuf:"varint,6,opt,name=directory_provider,json=directoryProvider,proto3,enum=scalekit.v1.directories.DirectoryProvider" json:"directory_provider,omitempty"`
	LastSyncedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_synced_at,json=lastSyncedAt,proto3" json:"last_synced_at,omitempty"`
	DirectoryEndpoint string                 `protobuf:"bytes,8,opt,name=directory_endpoint,json=directoryEndpoint,proto3" json:"directory_endpoint,omitempty"`
	TotalUsers        int32                  `protobuf:"varint,9,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	TotalGroups       int32                  `protobuf:"varint,10,opt,name=total_groups,json=totalGroups,proto3" json:"total_groups,omitempty"`
	Secrets           []*Secret              `protobuf:"bytes,11,rep,name=secrets,proto3" json:"secrets,omitempty"`
	Stats             *Stats                 `protobuf:"bytes,12,opt,name=stats,proto3" json:"stats,omitempty"`
	RoleAssignments   *RoleAssignments       `protobuf:"bytes,13,opt,name=role_assignments,json=roleAssignments,proto3" json:"role_assignments,omitempty"`
	AttributeMappings *AttributeMappings     `protobuf:"bytes,14,opt,name=attribute_mappings,json=attributeMappings,proto3" json:"attribute_mappings,omitempty"`
	Status            string                 `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	Email             string                 `protobuf:"bytes,16,opt,name=email,proto3" json:"email,omitempty"`
	GroupsTracked     string                 `protobuf:"bytes,17,opt,name=groups_tracked,json=groupsTracked,proto3" json:"groups_tracked,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Directory) Reset() {
	*x = Directory{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Directory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Directory) ProtoMessage() {}

func (x *Directory) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Directory.ProtoReflect.Descriptor instead.
func (*Directory) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{16}
}

func (x *Directory) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Directory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Directory) GetDirectoryType() DirectoryType {
	if x != nil {
		return x.DirectoryType
	}
	return DirectoryType_DIRECTORY_TYPE_UNSPECIFIED
}

func (x *Directory) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *Directory) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Directory) GetDirectoryProvider() DirectoryProvider {
	if x != nil {
		return x.DirectoryProvider
	}
	return DirectoryProvider_DIRECTORY_PROVIDER_UNSPECIFIED
}

func (x *Directory) GetLastSyncedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSyncedAt
	}
	return nil
}

func (x *Directory) GetDirectoryEndpoint() string {
	if x != nil {
		return x.DirectoryEndpoint
	}
	return ""
}

func (x *Directory) GetTotalUsers() int32 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

func (x *Directory) GetTotalGroups() int32 {
	if x != nil {
		return x.TotalGroups
	}
	return 0
}

func (x *Directory) GetSecrets() []*Secret {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *Directory) GetStats() *Stats {
	if x != nil {
		return x.Stats
	}
	return nil
}

func (x *Directory) GetRoleAssignments() *RoleAssignments {
	if x != nil {
		return x.RoleAssignments
	}
	return nil
}

func (x *Directory) GetAttributeMappings() *AttributeMappings {
	if x != nil {
		return x.AttributeMappings
	}
	return nil
}

func (x *Directory) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Directory) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Directory) GetGroupsTracked() string {
	if x != nil {
		return x.GroupsTracked
	}
	return ""
}

type ToggleDirectoryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Id             string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ToggleDirectoryRequest) Reset() {
	*x = ToggleDirectoryRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleDirectoryRequest) ProtoMessage() {}

func (x *ToggleDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleDirectoryRequest.ProtoReflect.Descriptor instead.
func (*ToggleDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{17}
}

func (x *ToggleDirectoryRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ToggleDirectoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ToggleDirectoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	ErrorMessage  *string                `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3,oneof" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToggleDirectoryResponse) Reset() {
	*x = ToggleDirectoryResponse{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToggleDirectoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleDirectoryResponse) ProtoMessage() {}

func (x *ToggleDirectoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleDirectoryResponse.ProtoReflect.Descriptor instead.
func (*ToggleDirectoryResponse) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{18}
}

func (x *ToggleDirectoryResponse) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ToggleDirectoryResponse) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type DirectoryMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	MapTo         string                 `protobuf:"bytes,2,opt,name=map_to,json=mapTo,proto3" json:"map_to,omitempty"`
	DisplayName   string                 `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectoryMapping) Reset() {
	*x = DirectoryMapping{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectoryMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryMapping) ProtoMessage() {}

func (x *DirectoryMapping) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryMapping.ProtoReflect.Descriptor instead.
func (*DirectoryMapping) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{19}
}

func (x *DirectoryMapping) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DirectoryMapping) GetMapTo() string {
	if x != nil {
		return x.MapTo
	}
	return ""
}

func (x *DirectoryMapping) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type DirectoryUser struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Email             string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	PreferredUsername string                 `protobuf:"bytes,3,opt,name=preferred_username,json=preferredUsername,proto3" json:"preferred_username,omitempty"`
	GivenName         string                 `protobuf:"bytes,4,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	FamilyName        string                 `protobuf:"bytes,5,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Emails            []string               `protobuf:"bytes,16,rep,name=emails,proto3" json:"emails,omitempty"`
	Groups            []*DirectoryGroup      `protobuf:"bytes,17,rep,name=groups,proto3" json:"groups,omitempty"`
	UserDetail        *structpb.Struct       `protobuf:"bytes,18,opt,name=user_detail,json=userDetail,proto3" json:"user_detail,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *DirectoryUser) Reset() {
	*x = DirectoryUser{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectoryUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryUser) ProtoMessage() {}

func (x *DirectoryUser) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryUser.ProtoReflect.Descriptor instead.
func (*DirectoryUser) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{20}
}

func (x *DirectoryUser) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DirectoryUser) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DirectoryUser) GetPreferredUsername() string {
	if x != nil {
		return x.PreferredUsername
	}
	return ""
}

func (x *DirectoryUser) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

func (x *DirectoryUser) GetFamilyName() string {
	if x != nil {
		return x.FamilyName
	}
	return ""
}

func (x *DirectoryUser) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DirectoryUser) GetEmails() []string {
	if x != nil {
		return x.Emails
	}
	return nil
}

func (x *DirectoryUser) GetGroups() []*DirectoryGroup {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *DirectoryUser) GetUserDetail() *structpb.Struct {
	if x != nil {
		return x.UserDetail
	}
	return nil
}

type ExternalGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ExternalId    string                 `protobuf:"bytes,1,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	DisplayName   string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Email         string                 `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExternalGroup) Reset() {
	*x = ExternalGroup{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExternalGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExternalGroup) ProtoMessage() {}

func (x *ExternalGroup) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExternalGroup.ProtoReflect.Descriptor instead.
func (*ExternalGroup) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{21}
}

func (x *ExternalGroup) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *ExternalGroup) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ExternalGroup) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type DirectoryGroup struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DisplayName   string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	TotalUsers    int32                  `protobuf:"varint,3,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	GroupDetail   *structpb.Struct       `protobuf:"bytes,5,opt,name=group_detail,json=groupDetail,proto3" json:"group_detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectoryGroup) Reset() {
	*x = DirectoryGroup{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectoryGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectoryGroup) ProtoMessage() {}

func (x *DirectoryGroup) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectoryGroup.ProtoReflect.Descriptor instead.
func (*DirectoryGroup) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{22}
}

func (x *DirectoryGroup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DirectoryGroup) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *DirectoryGroup) GetTotalUsers() int32 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

func (x *DirectoryGroup) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *DirectoryGroup) GetGroupDetail() *structpb.Struct {
	if x != nil {
		return x.GroupDetail
	}
	return nil
}

type CreateDirectorySecretRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	DirectoryId    string                 `protobuf:"bytes,2,opt,name=directory_id,json=directoryId,proto3" json:"directory_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateDirectorySecretRequest) Reset() {
	*x = CreateDirectorySecretRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirectorySecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirectorySecretRequest) ProtoMessage() {}

func (x *CreateDirectorySecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirectorySecretRequest.ProtoReflect.Descriptor instead.
func (*CreateDirectorySecretRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{23}
}

func (x *CreateDirectorySecretRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *CreateDirectorySecretRequest) GetDirectoryId() string {
	if x != nil {
		return x.DirectoryId
	}
	return ""
}

type CreateDirectorySecretResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlainSecret   string                 `protobuf:"bytes,1,opt,name=plain_secret,json=plainSecret,proto3" json:"plain_secret,omitempty"`
	Secret        *Secret                `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateDirectorySecretResponse) Reset() {
	*x = CreateDirectorySecretResponse{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateDirectorySecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDirectorySecretResponse) ProtoMessage() {}

func (x *CreateDirectorySecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDirectorySecretResponse.ProtoReflect.Descriptor instead.
func (*CreateDirectorySecretResponse) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{24}
}

func (x *CreateDirectorySecretResponse) GetPlainSecret() string {
	if x != nil {
		return x.PlainSecret
	}
	return ""
}

func (x *CreateDirectorySecretResponse) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type RegenerateDirectorySecretRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	DirectoryId    string                 `protobuf:"bytes,2,opt,name=directory_id,json=directoryId,proto3" json:"directory_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RegenerateDirectorySecretRequest) Reset() {
	*x = RegenerateDirectorySecretRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegenerateDirectorySecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateDirectorySecretRequest) ProtoMessage() {}

func (x *RegenerateDirectorySecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateDirectorySecretRequest.ProtoReflect.Descriptor instead.
func (*RegenerateDirectorySecretRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{25}
}

func (x *RegenerateDirectorySecretRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *RegenerateDirectorySecretRequest) GetDirectoryId() string {
	if x != nil {
		return x.DirectoryId
	}
	return ""
}

type RegenerateDirectorySecretResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlainSecret   string                 `protobuf:"bytes,1,opt,name=plain_secret,json=plainSecret,proto3" json:"plain_secret,omitempty"`
	Secret        *Secret                `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegenerateDirectorySecretResponse) Reset() {
	*x = RegenerateDirectorySecretResponse{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegenerateDirectorySecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateDirectorySecretResponse) ProtoMessage() {}

func (x *RegenerateDirectorySecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateDirectorySecretResponse.ProtoReflect.Descriptor instead.
func (*RegenerateDirectorySecretResponse) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{26}
}

func (x *RegenerateDirectorySecretResponse) GetPlainSecret() string {
	if x != nil {
		return x.PlainSecret
	}
	return ""
}

func (x *RegenerateDirectorySecretResponse) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type Secret struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreateTime    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	SecretSuffix  string                 `protobuf:"bytes,4,opt,name=secret_suffix,json=secretSuffix,proto3" json:"secret_suffix,omitempty"`
	Status        SecretStatus           `protobuf:"varint,5,opt,name=status,proto3,enum=scalekit.v1.directories.SecretStatus" json:"status,omitempty"`
	ExpireTime    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expire_time,json=expireTime,proto3" json:"expire_time,omitempty"`
	LastUsedTime  *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_used_time,json=lastUsedTime,proto3" json:"last_used_time,omitempty"`
	DirectoryId   string                 `protobuf:"bytes,9,opt,name=directory_id,json=directoryId,proto3" json:"directory_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Secret) Reset() {
	*x = Secret{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{27}
}

func (x *Secret) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Secret) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Secret) GetSecretSuffix() string {
	if x != nil {
		return x.SecretSuffix
	}
	return ""
}

func (x *Secret) GetStatus() SecretStatus {
	if x != nil {
		return x.Status
	}
	return SecretStatus_ACTIVE
}

func (x *Secret) GetExpireTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpireTime
	}
	return nil
}

func (x *Secret) GetLastUsedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUsedTime
	}
	return nil
}

func (x *Secret) GetDirectoryId() string {
	if x != nil {
		return x.DirectoryId
	}
	return ""
}

type Stats struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	TotalUsers     int32                  `protobuf:"varint,1,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	TotalGroups    int32                  `protobuf:"varint,2,opt,name=total_groups,json=totalGroups,proto3" json:"total_groups,omitempty"`
	GroupUpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=group_updated_at,json=groupUpdatedAt,proto3" json:"group_updated_at,omitempty"`
	UserUpdatedAt  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=user_updated_at,json=userUpdatedAt,proto3" json:"user_updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Stats) Reset() {
	*x = Stats{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stats) ProtoMessage() {}

func (x *Stats) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stats.ProtoReflect.Descriptor instead.
func (*Stats) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{28}
}

func (x *Stats) GetTotalUsers() int32 {
	if x != nil {
		return x.TotalUsers
	}
	return 0
}

func (x *Stats) GetTotalGroups() int32 {
	if x != nil {
		return x.TotalGroups
	}
	return 0
}

func (x *Stats) GetGroupUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.GroupUpdatedAt
	}
	return nil
}

func (x *Stats) GetUserUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UserUpdatedAt
	}
	return nil
}

type AssignRolesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId  string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Id              string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	RoleAssignments *RoleAssignments       `protobuf:"bytes,3,opt,name=role_assignments,json=roleAssignments,proto3" json:"role_assignments,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AssignRolesRequest) Reset() {
	*x = AssignRolesRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRolesRequest) ProtoMessage() {}

func (x *AssignRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRolesRequest.ProtoReflect.Descriptor instead.
func (*AssignRolesRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{29}
}

func (x *AssignRolesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *AssignRolesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *AssignRolesRequest) GetRoleAssignments() *RoleAssignments {
	if x != nil {
		return x.RoleAssignments
	}
	return nil
}

type RoleAssignments struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Assignments   []*RoleAssignment      `protobuf:"bytes,1,rep,name=assignments,proto3" json:"assignments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoleAssignments) Reset() {
	*x = RoleAssignments{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleAssignments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAssignments) ProtoMessage() {}

func (x *RoleAssignments) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAssignments.ProtoReflect.Descriptor instead.
func (*RoleAssignments) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{30}
}

func (x *RoleAssignments) GetAssignments() []*RoleAssignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

type AssignRolesResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RoleAssignments *RoleAssignments       `protobuf:"bytes,1,opt,name=role_assignments,json=roleAssignments,proto3" json:"role_assignments,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *AssignRolesResponse) Reset() {
	*x = AssignRolesResponse{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AssignRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignRolesResponse) ProtoMessage() {}

func (x *AssignRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignRolesResponse.ProtoReflect.Descriptor instead.
func (*AssignRolesResponse) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{31}
}

func (x *AssignRolesResponse) GetRoleAssignments() *RoleAssignments {
	if x != nil {
		return x.RoleAssignments
	}
	return nil
}

type RoleAssignment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupId       string                 `protobuf:"bytes,1,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	RoleName      string                 `protobuf:"bytes,2,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	RoleId        string                 `protobuf:"bytes,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoleAssignment) Reset() {
	*x = RoleAssignment{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoleAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoleAssignment) ProtoMessage() {}

func (x *RoleAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoleAssignment.ProtoReflect.Descriptor instead.
func (*RoleAssignment) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{32}
}

func (x *RoleAssignment) GetGroupId() string {
	if x != nil {
		return x.GroupId
	}
	return ""
}

func (x *RoleAssignment) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *RoleAssignment) GetRoleId() string {
	if x != nil {
		return x.RoleId
	}
	return ""
}

type UpdateAttributesRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId   string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Id               string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	AttributeMapping *AttributeMappings     `protobuf:"bytes,3,opt,name=attribute_mapping,json=attributeMapping,proto3" json:"attribute_mapping,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateAttributesRequest) Reset() {
	*x = UpdateAttributesRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAttributesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttributesRequest) ProtoMessage() {}

func (x *UpdateAttributesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttributesRequest.ProtoReflect.Descriptor instead.
func (*UpdateAttributesRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateAttributesRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *UpdateAttributesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateAttributesRequest) GetAttributeMapping() *AttributeMappings {
	if x != nil {
		return x.AttributeMapping
	}
	return nil
}

type AttributeMappings struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Attributes    []*AttributeMapping    `protobuf:"bytes,1,rep,name=attributes,proto3" json:"attributes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributeMappings) Reset() {
	*x = AttributeMappings{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeMappings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeMappings) ProtoMessage() {}

func (x *AttributeMappings) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeMappings.ProtoReflect.Descriptor instead.
func (*AttributeMappings) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{34}
}

func (x *AttributeMappings) GetAttributes() []*AttributeMapping {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type AttributeMapping struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	MapTo         string                 `protobuf:"bytes,2,opt,name=map_to,json=mapTo,proto3" json:"map_to,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttributeMapping) Reset() {
	*x = AttributeMapping{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttributeMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeMapping) ProtoMessage() {}

func (x *AttributeMapping) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeMapping.ProtoReflect.Descriptor instead.
func (*AttributeMapping) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{35}
}

func (x *AttributeMapping) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AttributeMapping) GetMapTo() string {
	if x != nil {
		return x.MapTo
	}
	return ""
}

type UpdateAttributesResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	AttributeMappings *AttributeMappings     `protobuf:"bytes,1,opt,name=attribute_mappings,json=attributeMappings,proto3" json:"attribute_mappings,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateAttributesResponse) Reset() {
	*x = UpdateAttributesResponse{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAttributesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAttributesResponse) ProtoMessage() {}

func (x *UpdateAttributesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAttributesResponse.ProtoReflect.Descriptor instead.
func (*UpdateAttributesResponse) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{36}
}

func (x *UpdateAttributesResponse) GetAttributeMappings() *AttributeMappings {
	if x != nil {
		return x.AttributeMappings
	}
	return nil
}

type DeleteDirectoryRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Id             string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteDirectoryRequest) Reset() {
	*x = DeleteDirectoryRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDirectoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDirectoryRequest) ProtoMessage() {}

func (x *DeleteDirectoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDirectoryRequest.ProtoReflect.Descriptor instead.
func (*DeleteDirectoryRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{37}
}

func (x *DeleteDirectoryRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *DeleteDirectoryRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type TriggerDirectorySyncRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	DirectoryId    string                 `protobuf:"bytes,1,opt,name=directory_id,json=directoryId,proto3" json:"directory_id,omitempty"`
	OrganizationId string                 `protobuf:"bytes,2,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *TriggerDirectorySyncRequest) Reset() {
	*x = TriggerDirectorySyncRequest{}
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerDirectorySyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerDirectorySyncRequest) ProtoMessage() {}

func (x *TriggerDirectorySyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_scalekit_v1_directories_directories_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerDirectorySyncRequest.ProtoReflect.Descriptor instead.
func (*TriggerDirectorySyncRequest) Descriptor() ([]byte, []int) {
	return file_scalekit_v1_directories_directories_proto_rawDescGZIP(), []int{38}
}

func (x *TriggerDirectorySyncRequest) GetDirectoryId() string {
	if x != nil {
		return x.DirectoryId
	}
	return ""
}

func (x *TriggerDirectorySyncRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

var File_scalekit_v1_directories_directories_proto protoreflect.FileDescriptor

const file_scalekit_v1_directories_directories_proto_rawDesc = "" +
	"\n" +
	")scalekit/v1/directories/directories.proto\x12\x17scalekit.v1.directories\x1a\x1bbuf/validate/validate.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1bgoogle/api/visibility.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a!scalekit/v1/options/options.proto\"\xdb\x01\n" +
	"\x13GetDirectoryRequest\x12S\n" +
	"\x02id\x18\x01 \x01(\tBC\x92A72\"Unique identifier of the directoryJ\x11\"dir_12131243412\"\xbaH\x06r\x04\x10\x01\x18 R\x02id\x12o\n" +
	"\x0forganization_id\x18\x02 \x01(\tBF\x92A:2%Unique identifier of the organizationJ\x11\"org_12131243412\"\xbaH\x06r\x04\x10\x01\x18 R\x0eorganizationId\"\x91\x01\n" +
	"\x14GetDirectoryResponse\x12y\n" +
	"\tdirectory\x18\x01 \x01(\v2\".scalekit.v1.directories.DirectoryB7\x92A422Detailed information about the requested directoryR\tdirectory\"\xf7\x01\n" +
	"\x16CreateDirectoryRequest\x12w\n" +
	"\x0forganization_id\x18\x01 \x01(\tBN\x92A?2$Unique identifier to an OrganizationJ\x17\"org_12362474900684814\"\xbaH\t\xc8\x01\x01r\x04\x10\x01\x18 R\x0eorganizationId\x12d\n" +
	"\tdirectory\x18\x02 \x01(\v2(.scalekit.v1.directories.CreateDirectoryB\x1c\x92A\x132\x11Directory Details\xbaH\x03\xc8\x01\x01R\tdirectory\"\xf7\x01\n" +
	"\x0fCreateDirectory\x12k\n" +
	"\x0edirectory_type\x18\x01 \x01(\x0e2&.scalekit.v1.directories.DirectoryTypeB\x1c\x92A\x0e2\x04TypeJ\x06\"SCIM\"\xbaH\b\xc8\x01\x01\x82\x01\x02\x10\x01R\rdirectoryType\x12w\n" +
	"\x12directory_provider\x18\x02 \x01(\x0e2*.scalekit.v1.directories.DirectoryProviderB\x1c\x92A\x112\aProvideJ\x06\"OKTA\"\xbaH\x05\x82\x01\x02\x10\x01R\x11directoryProvider\"y\n" +
	"\x17CreateDirectoryResponse\x12^\n" +
	"\tdirectory\x18\x01 \x01(\v2\".scalekit.v1.directories.DirectoryB\x1c\x92A\x132\x11Directory Details\xbaH\x03\xc8\x01\x01R\tdirectory\"\xd9\x01\n" +
	"\x16UpdateDirectoryRequest\x12\x1f\n" +
	"\x02id\x18\x01 \x01(\tB\x0f\xbaH\fr\n" +
	"\x10\x01\x18 :\x04dir_R\x02id\x128\n" +
	"\x0forganization_id\x18\x02 \x01(\tB\x0f\xbaH\fr\n" +
	"\x10\x01\x18 :\x04org_R\x0eorganizationId\x12d\n" +
	"\tdirectory\x18\x03 \x01(\v2(.scalekit.v1.directories.UpdateDirectoryB\x1c\x92A\x132\x11Directory Details\xbaH\x03\xc8\x01\x01R\tdirectory\"\x9a\x06\n" +
	"\x0fUpdateDirectory\x123\n" +
	"\x04name\x18\x02 \x01(\tB\x1f\x92A\x122\x04NameJ\n" +
	"\"Azure AD\"\xbaH\ar\x05\x10\x01\x18\x80\x02R\x04name\x12h\n" +
	"\x0edirectory_type\x18\x03 \x01(\x0e2&.scalekit.v1.directories.DirectoryTypeB\x19\x92A\x0e2\x04TypeJ\x06\"SCIM\"\xbaH\x05\x82\x01\x02\x10\x01R\rdirectoryType\x12+\n" +
	"\aenabled\x18\a \x01(\bB\x11\x92A\x0e2\x06StatusJ\x04trueR\aenabled\x12\xec\x01\n" +
	"\x12directory_provider\x18\b \x01(\x0e2*.scalekit.v1.directories.DirectoryProviderB\x90\x01\x92A\x84\x012-Identity provider connected to this directoryJS\"OKTA\", \"GOOGLE\", \"MICROSOFT_AD\", \"AUTH0\", \"ONELOGIN\", \"JUMPCLOUD\", \"PING_IDENTITY\"\xbaH\x05\x82\x01\x02\x10\x01R\x11directoryProvider\x12h\n" +
	"\x06status\x18\t \x01(\x0e2(.scalekit.v1.directories.DirectoryStatusB&\x92A\x1b2\fSetup StatusJ\v\"COMPLETED\"\xbaH\x05\x82\x01\x02\x10\x01R\x06status\x12E\n" +
	"\bmappings\x18\n" +
	" \x03(\v2).scalekit.v1.directories.DirectoryMappingR\bmappings\x12q\n" +
	"\x06groups\x18\x0f \x03(\v2&.scalekit.v1.directories.ExternalGroupB1\x92A.2,List of groups associated with the directoryR\x06groupsJ\x04\b\x01\x10\x02J\x04\b\x04\x10\x05J\x04\b\x06\x10\aJ\x04\b\v\x10\fJ\x04\b\f\x10\rJ\x04\b\r\x10\x0eJ\x04\b\x0e\x10\x0f\"y\n" +
	"\x17UpdateDirectoryResponse\x12^\n" +
	"\tdirectory\x18\x01 \x01(\v2\".scalekit.v1.directories.DirectoryB\x1c\x92A\x132\x11Directory Details\xbaH\x03\xc8\x01\x01R\tdirectory\"\xdf\x01\n" +
	"\x1fAssignGroupsForDirectoryRequest\x12\x1f\n" +
	"\x02id\x18\x01 \x01(\tB\x0f\xbaH\fr\n" +
	"\x10\x01\x18 :\x04dir_R\x02id\x128\n" +
	"\x0forganization_id\x18\x02 \x01(\tB\x0f\xbaH\fr\n" +
	"\x10\x01\x18 :\x04org_R\x0eorganizationId\x12a\n" +
	"\fexternal_ids\x18\x03 \x03(\tB>\x92A523external_ids of groups to be tracked during polling\xbaH\x03\xc8\x01\x01R\vexternalIds\"\x92\x01\n" +
	"\x16ListDirectoriesRequest\x12x\n" +
	"\x0forganization_id\x18\x01 \x01(\tBO\x92A=2%Unique identifier of the organizationJ\x14\"org_12362474900684\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04org_R\x0eorganizationId\"\xa1\x01\n" +
	"\x17ListDirectoriesResponse\x12\x85\x01\n" +
	"\vdirectories\x18\x01 \x03(\v2\".scalekit.v1.directories.DirectoryB?\x92A624List of directories associated with the organization\xbaH\x03\xc8\x01\x01R\vdirectories\"\xd6\t\n" +
	"\x19ListDirectoryUsersRequest\x12x\n" +
	"\x0forganization_id\x18\x01 \x01(\tBO\x92A=2%Unique identifier of the organizationJ\x14\"org_12131243412331\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04org_R\x0eorganizationId\x12\x87\x01\n" +
	"\fdirectory_id\x18\x02 \x01(\tBd\x92AR2:Unique identifier of the directory within the organizationJ\x14\"dir_12131243412331\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04dir_R\vdirectoryId\x12\x86\x01\n" +
	"\tpage_size\x18\x03 \x01(\rBi\x92A_2YNumber of users to return per page. Maximum value is 30. If not specified, defaults to 10J\x0210\xbaH\x04*\x02\x18\x1eR\bpageSize\x12\xb0\x01\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tB\x90\x01\x92A\x8c\x012\x89\x01Token for pagination. Use the value returned in the 'next_page_token' field of the previous response to retrieve the next page of resultsR\tpageToken\x12\xe1\x01\n" +
	"\x0einclude_detail\x18\x05 \x01(\bB\xb4\x01\x92A\xb0\x012\xa7\x01If set to true, the response will include the full user payload with all available details. If false or not specified, only essential user information will be returnedJ\x04trueH\x00R\rincludeDetail\x88\x01\x01\x12\xa1\x01\n" +
	"\x12directory_group_id\x18\x06 \x01(\tBn\x92AW2>Filter users by their membership in a specific directory groupJ\x15\"dirgroup_1213124341\"\xbaH\x11r\x0f\x10\x01\x18%:\tdirgroup_H\x01R\x10directoryGroupId\x88\x01\x01\x12\xb4\x01\n" +
	"\rupdated_after\x18\a \x01(\v2\x1a.google.protobuf.TimestampBn\x92Ak2QFilter users that were updated after the specified timestamp. Use ISO 8601 formatJ\x16\"2021-01-01T00:00:00Z\"H\x02R\fupdatedAfter\x88\x01\x01B\x11\n" +
	"\x0f_include_detailB\x15\n" +
	"\x13_directory_group_idB\x10\n" +
	"\x0e_updated_after\"\xe1\x04\n" +
	"\x1aListDirectoryUsersResponse\x12\x81\x01\n" +
	"\x05users\x18\x01 \x03(\v2&.scalekit.v1.directories.DirectoryUserBC\x92A@2>List of directory users retrieved from the specified directoryR\x05users\x12t\n" +
	"\n" +
	"total_size\x18\x02 \x01(\rBU\x92AR2PTotal number of users available in the directory that match the request criteriaR\ttotalSize\x12\xa5\x01\n" +
	"\x0fnext_page_token\x18\x03 \x01(\tB}\x92Az2xToken for pagination. Use this token in the 'page_token' field of the next request to fetch the subsequent page of usersR\rnextPageToken\x12\xa0\x01\n" +
	"\x0fprev_page_token\x18\x04 \x01(\tBx\x92Au2sToken for pagination. Use this token in the 'page_token' field of the next request to fetch the prior page of usersR\rprevPageToken\"\xb6\b\n" +
	"\x1aListDirectoryGroupsRequest\x12y\n" +
	"\x0forganization_id\x18\x01 \x01(\tBP\x92A>2%Unique identifier of the organizationJ\x15\"org_121312434123312\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04org_R\x0eorganizationId\x12p\n" +
	"\fdirectory_id\x18\x02 \x01(\tBM\x92A;2\"Unique identifier of the directoryJ\x15\"dir_121312434123312\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04dir_R\vdirectoryId\x12\x87\x01\n" +
	"\tpage_size\x18\x03 \x01(\rBj\x92A`2ZNumber of groups to return per page. Maximum value is 30. If not specified, defaults to 10J\x0210\xbaH\x04*\x02\x18\x1eR\bpageSize\x12\x88\x01\n" +
	"\n" +
	"page_token\x18\x04 \x01(\tBi\x92Af2dToken for pagination. Use the value returned in the 'next_page_token' field of the previous responseR\tpageToken\x12\xa2\x01\n" +
	"\rupdated_after\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\\\x92AY2?Filter groups updated after this timestamp. Use ISO 8601 formatJ\x16\"2021-01-01T00:00:00Z\"H\x00R\fupdatedAfter\x88\x01\x01\x12\x96\x01\n" +
	"\x0einclude_detail\x18\x06 \x01(\bBj\x92Ag2_If true, includes full group details. If false or not specified, returns basic information onlyJ\x04trueH\x01R\rincludeDetail\x88\x01\x01\x12\x96\x01\n" +
	"\x17include_external_groups\x18\a \x01(\bBY\x92AV2NIf true, returns group and its details from external provider (default: false)J\x04trueH\x02R\x15includeExternalGroups\x88\x01\x01B\x10\n" +
	"\x0e_updated_afterB\x11\n" +
	"\x0f_include_detailB\x1a\n" +
	"\x18_include_external_groups\"\xcd\x04\n" +
	"\x1bListDirectoryGroupsResponse\x12\x85\x01\n" +
	"\x06groups\x18\x01 \x03(\v2'.scalekit.v1.directories.DirectoryGroupBD\x92AA2?List of directory groups retrieved from the specified directoryR\x06groups\x12r\n" +
	"\n" +
	"total_size\x18\x02 \x01(\rBS\x92AP2NTotal number of groups matching the request criteria, regardless of paginationR\ttotalSize\x12\x95\x01\n" +
	"\x0fnext_page_token\x18\x03 \x01(\tBm\x92Aj2hToken to retrieve the next page of results. Use this token in the 'page_token' field of the next requestR\rnextPageToken\x12\x99\x01\n" +
	"\x0fprev_page_token\x18\x04 \x01(\tBq\x92An2lToken to retrieve the previous page of results. Use this token in the 'page_token' field of the next requestR\rprevPageToken\"\x90\x02\n" +
	"!ListDirectoryGroupsSummaryRequest\x12y\n" +
	"\x0forganization_id\x18\x01 \x01(\tBP\x92A>2%Unique identifier of the organizationJ\x15\"org_121312434123312\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04org_R\x0eorganizationId\x12p\n" +
	"\fdirectory_id\x18\x02 \x01(\tBM\x92A;2\"Unique identifier of the directoryJ\x15\"dir_121312434123312\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04dir_R\vdirectoryId\"\x94\x13\n" +
	"\tDirectory\x12]\n" +
	"\x02id\x18\x01 \x01(\tBM\x92A;2\"Unique identifier of the directoryJ\x15\"dir_121312434123312\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04dir_R\x02id\x12}\n" +
	"\x04name\x18\x02 \x01(\tBi\x92A\\2NName of the directory, typically representing the connected Directory providerJ\n" +
	"\"Azure AD\"\xbaH\ar\x05\x10\x01\x18\x80\x02R\x04name\x12\xb7\x01\n" +
	"\x0edirectory_type\x18\x03 \x01(\x0e2&.scalekit.v1.directories.DirectoryTypeBh\x92A]2SType of the directory, indicating the protocol or standard used for synchronizationJ\x06\"SCIM\"\xbaH\x05\x82\x01\x02\x10\x01R\rdirectoryType\x12\x98\x01\n" +
	"\x0forganization_id\x18\x04 \x01(\tBo\x92A]2DUnique identifier of the organization to which the directory belongsJ\x15\"org_121312434123312\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04org_R\x0eorganizationId\x12\x85\x01\n" +
	"\aenabled\x18\x05 \x01(\bBk\x92Ah2`Indicates whether the directory is currently enabled and actively synchronizing users and groupsJ\x04trueR\aenabled\x12\x9d\x01\n" +
	"\x12directory_provider\x18\x06 \x01(\x0e2*.scalekit.v1.directories.DirectoryProviderBB\x92A72-Identity provider connected to this directoryJ\x06\"OKTA\"\xbaH\x05\x82\x01\x02\x10\x01R\x11directoryProvider\x12\xbf\x01\n" +
	"\x0elast_synced_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampB}\x92Az2`Timestamp of the last successful synchronization of users and groups from the Directory ProviderJ\x16\"2024-10-01T00:00:00Z\"R\flastSyncedAt\x12\xed\x01\n" +
	"\x12directory_endpoint\x18\b \x01(\tB\xbd\x01\x92A\xaf\x012eThe endpoint URL generated by Scalekit for synchronizing users and groups from the Directory ProviderJF\"https://yourapp.scalekit.com/api/v1/directoies/dir_123212312/scim/v2\"\xbaH\ar\x05\x10\x01\x18\xd0\x0fR\x11directoryEndpoint\x12P\n" +
	"\vtotal_users\x18\t \x01(\x05B/\x92A,2&Total number of users in the directoryJ\x0210R\n" +
	"totalUsers\x12S\n" +
	"\ftotal_groups\x18\n" +
	" \x01(\x05B0\x92A-2'Total number of groups in the directoryJ\x0210R\vtotalGroups\x12\x95\x01\n" +
	"\asecrets\x18\v \x03(\v2\x1f.scalekit.v1.directories.SecretBZ\x92AW2UList of secrets used for authenticating and synchronizing with the Directory ProviderR\asecrets\x12\x9b\x01\n" +
	"\x05stats\x18\f \x01(\v2\x1e.scalekit.v1.directories.StatsBe\x92Ab2`Statistics and metrics related to the directory, such as synchronization status and error countsR\x05stats\x12\xaf\x01\n" +
	"\x10role_assignments\x18\r \x01(\v2(.scalekit.v1.directories.RoleAssignmentsBZ\x92AW2URole assignments associated with the directory, defining group based role assignmentsR\x0froleAssignments\x12\xac\x01\n" +
	"\x12attribute_mappings\x18\x0e \x01(\v2*.scalekit.v1.directories.AttributeMappingsBQ\x92AN2LMappings between directory attributes and Scalekit user and group attributesR\x11attributeMappings\x12D\n" +
	"\x06status\x18\x0f \x01(\tB,\x92A!2\x10Directory StatusJ\r\"IN_PROGRESS\"\xbaH\x05\x82\x01\x02\x10\x01R\x06status\x12~\n" +
	"\x05email\x18\x10 \x01(\tBh\x92Ae2HEmail Id associated with Directory whose access will be used for pollingJ\x19\"john.doe@scalekit.cloud\"R\x05email\x12v\n" +
	"\x0egroups_tracked\x18\x11 \x01(\tBO\x92AL2CIt indicates if all groups are tracked or select groups are trackedJ\x05\"ALL\"R\rgroupsTracked\"\xaf\x03\n" +
	"\x16ToggleDirectoryRequest\x12\xc8\x01\n" +
	"\x0forganization_id\x18\x01 \x01(\tB\x9e\x01\x92A\x8b\x012rA unique identifier for the organization. The value must begin with 'org_' and be between 1 and 32 characters longJ\x15\"org_121312434123312\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04org_R\x0eorganizationId\x12\xc3\x01\n" +
	"\x02id\x18\x03 \x01(\tB\xb2\x01\x92A\x9f\x012\x85\x01A unique identifier for a directory within the organization. The value must begin with 'dir_' and be between 1 and 32 characters longJ\x15\"dir_121312434123312\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04dir_R\x02idJ\x04\b\x02\x10\x03\"\xac\x04\n" +
	"\x17ToggleDirectoryResponse\x12\x96\x02\n" +
	"\aenabled\x18\x01 \x01(\bB\xfb\x01\x92A\xf7\x012\xee\x01Specifies the directory's state after the toggle operation. A value of `true` indicates that the directory is enabled and actively synchronizing users and groups. A value of `false` means the directory is disabled, halting synchronizationJ\x04trueR\aenabled\x12\xe5\x01\n" +
	"\rerror_message\x18\x02 \x01(\tB\xba\x01\x92A\xb6\x012\x8f\x01Contains a human-readable error message if the toggle operation encountered an issue. If the operation was successful, this field will be emptyJ\"\"The directory is already enabled\"H\x00R\ferrorMessage\x88\x01\x01B\x10\n" +
	"\x0e_error_message\"z\n" +
	"\x10DirectoryMapping\x12\x1e\n" +
	"\x03key\x18\x01 \x01(\tB\f\xbaH\t\xc8\x01\x01r\x04\x10\x01\x18 R\x03key\x12#\n" +
	"\x06map_to\x18\x02 \x01(\tB\f\xbaH\t\xc8\x01\x01r\x04\x10\x01\x18 R\x05mapTo\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\"\xae\x05\n" +
	"\rDirectoryUser\x12J\n" +
	"\x02id\x18\x01 \x01(\tB:\x92A$2\aUser IDJ\x19\"diruser_121312434123312\"\xbaH\x10r\x0e\x10\x01\x18$:\bdiruser_R\x02id\x125\n" +
	"\x05email\x18\x02 \x01(\tB\x1f\x92A\x122\x05EmailJ\t\"johndoe\"\xbaH\ar\x05\x10\x01\x18\x80\x02R\x05email\x12[\n" +
	"\x12preferred_username\x18\x03 \x01(\tB,\x92A\x1f2\x12Preferred UsernameJ\t\"johndoe\"\xbaH\ar\x05\x10\x01\x18\x80\x02R\x11preferredUsername\x12@\n" +
	"\n" +
	"given_name\x18\x04 \x01(\tB!\x92A\x142\n" +
	"First NameJ\x06\"John\"\xbaH\ar\x05\x10\x01\x18\x80\x02R\tgivenName\x12@\n" +
	"\vfamily_name\x18\x05 \x01(\tB\x1f\x92A\x122\tLast NameJ\x05\"Doe\"\xbaH\ar\x05\x10\x01\x18\x80\x02R\n" +
	"familyName\x12b\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB'\x92A$2\n" +
	"Updated AtJ\x16\"2024-10-01T00:00:00Z\"R\tupdatedAt\x12#\n" +
	"\x06emails\x18\x10 \x03(\tB\v\x92A\b2\x06EmailsR\x06emails\x12L\n" +
	"\x06groups\x18\x11 \x03(\v2'.scalekit.v1.directories.DirectoryGroupB\v\x92A\b2\x06GroupsR\x06groups\x12\\\n" +
	"\vuser_detail\x18\x12 \x01(\v2\x17.google.protobuf.StructB\"\x92A\x1f2\x1dComplete User Details PayloadR\n" +
	"userDetailJ\x04\b\a\x10\x10\"\xf3\x01\n" +
	"\rExternalGroup\x12T\n" +
	"\vexternal_id\x18\x01 \x01(\tB3\x92A&2\x11External Group IDJ\x11\"02y3w247124ccqi\"\xbaH\ar\x05\x10\x01\x18\x80\x02R\n" +
	"externalId\x12H\n" +
	"\fdisplay_name\x18\x02 \x01(\tB%\x92A\x182\fDisplay NameJ\b\"Admins\"\xbaH\ar\x05\x10\x01\x18\x80\x02R\vdisplayName\x12B\n" +
	"\x05email\x18\x03 \x01(\tB,\x92A\x1f2\x05EmailJ\x16\"johndoe@scalekit.com\"\xbaH\ar\x05\x10\x01\x18\x80\x02R\x05email\"\xb2\x03\n" +
	"\x0eDirectoryGroup\x12M\n" +
	"\x02id\x18\x01 \x01(\tB=\x92A&2\bGroup IDJ\x1a\"dirgroup_121312434123312\"\xbaH\x11r\x0f\x10\x01\x18$:\tdirgroup_R\x02id\x12H\n" +
	"\fdisplay_name\x18\x02 \x01(\tB%\x92A\x182\fDisplay NameJ\b\"Admins\"\xbaH\ar\x05\x10\x01\x18\x80\x02R\vdisplayName\x12B\n" +
	"\vtotal_users\x18\x03 \x01(\x05B!\x92A\x1e2\x18Total Users in the GroupJ\x0210R\n" +
	"totalUsers\x12b\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB'\x92A$2\n" +
	"Updated AtJ\x16\"2024-10-01T00:00:00Z\"R\tupdatedAt\x12_\n" +
	"\fgroup_detail\x18\x05 \x01(\v2\x17.google.protobuf.StructB#\x92A 2\x1eComplete Group Details PayloadR\vgroupDetail\"\xb9\x01\n" +
	"\x1cCreateDirectorySecretRequest\x12e\n" +
	"\x0forganization_id\x18\x01 \x01(\tB<\x92A*2\x0fOrganization IDJ\x17\"org_12362474900684814\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04org_R\x0eorganizationId\x122\n" +
	"\fdirectory_id\x18\x02 \x01(\tB\x0f\xbaH\fr\n" +
	"\x10\x01\x18 :\x04dir_R\vdirectoryId\"\xa4\x02\n" +
	"\x1dCreateDirectorySecretResponse\x12\xb4\x01\n" +
	"\fplain_secret\x18\x01 \x01(\tB\x90\x01\x92A\x8c\x012VPlain Secret. This is only returned in Plain Text as response to the Creation Request.J2\"dXNlcm5hbWU6cGFzc3dvcmQ6c2VjcmV0a2V5MTIzNDU2Nzg5\"R\vplainSecret\x12L\n" +
	"\x06secret\x18\x02 \x01(\v2\x1f.scalekit.v1.directories.SecretB\x13\x92A\x102\x0eSecret DetailsR\x06secret\"\x90\x01\n" +
	" RegenerateDirectorySecretRequest\x128\n" +
	"\x0forganization_id\x18\x01 \x01(\tB\x0f\xbaH\fr\n" +
	"\x10\x01\x18 :\x04org_R\x0eorganizationId\x122\n" +
	"\fdirectory_id\x18\x02 \x01(\tB\x0f\xbaH\fr\n" +
	"\x10\x01\x18 :\x04dir_R\vdirectoryId\"\xa8\x02\n" +
	"!RegenerateDirectorySecretResponse\x12\xb4\x01\n" +
	"\fplain_secret\x18\x01 \x01(\tB\x90\x01\x92A\x8c\x012VPlain Secret. This is only returned in Plain Text as response to the Creation Request.J2\"dXNlcm5hbWU6cGFzc3dvcmQ6c2VjcmV0a2V5MTIzNDU2Nzg5\"R\vplainSecret\x12L\n" +
	"\x06secret\x18\x02 \x01(\v2\x1f.scalekit.v1.directories.SecretB\x13\x92A\x102\x0eSecret DetailsR\x06secret\"\xe4\x04\n" +
	"\x06Secret\x12\x1f\n" +
	"\x02id\x18\x01 \x01(\tB\x0f\xbaH\fr\n" +
	"\x10\x01\x18 :\x04sec_R\x02id\x12g\n" +
	"\vcreate_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampB*\x92A'2\rCreation TimeJ\x16\"2024-10-01T00:00:00Z\"R\n" +
	"createTime\x12?\n" +
	"\rsecret_suffix\x18\x04 \x01(\tB\x1a\x92A\x172\rSecret SuffixJ\x06\"Nzg5\"R\fsecretSuffix\x12[\n" +
	"\x06status\x18\x05 \x01(\x0e2%.scalekit.v1.directories.SecretStatusB\x1c\x92A\x192\rSecret StatusJ\b\"ACTIVE\"R\x06status\x12e\n" +
	"\vexpire_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB(\x92A%2\vExpiry TimeJ\x16\"2025-10-01T00:00:00Z\"R\n" +
	"expireTime\x12m\n" +
	"\x0elast_used_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampB+\x92A(2\x0eLast Used TimeJ\x16\"2024-10-01T00:00:00Z\"R\flastUsedTime\x12\\\n" +
	"\fdirectory_id\x18\t \x01(\tB9\x92A'2\fDirectory IDJ\x17\"dir_12362474900684814\"\xbaH\fr\n" +
	"\x10\x01\x18 :\x04dir_R\vdirectoryId\"\xb7\x03\n" +
	"\x05Stats\x12F\n" +
	"\vtotal_users\x18\x01 \x01(\x05B%\x92A\"2\x1cTotal Users in the DirectoryJ\x0210R\n" +
	"totalUsers\x12I\n" +
	"\ftotal_groups\x18\x02 \x01(\x05B&\x92A#2\x1dTotal Groups in the DirectoryJ\x0210R\vtotalGroups\x12\x8d\x01\n" +
	"\x10group_updated_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampBG\x92AD2*Max time of Group Updated At for DirectoryJ\x16\"2024-10-01T00:00:00Z\"R\x0egroupUpdatedAt\x12\x8a\x01\n" +
	"\x0fuser_updated_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampBF\x92AC2)Max time of User Updated At for DirectoryJ\x16\"2024-10-01T00:00:00Z\"R\ruserUpdatedAt\"\xb8\x01\n" +
	"\x12AssignRolesRequest\x122\n" +
	"\x0forganization_id\x18\x01 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x0eorganizationId\x12\x19\n" +
	"\x02id\x18\x02 \x01(\tB\t\xbaH\x06r\x04\x10\x01\x18 R\x02id\x12S\n" +
	"\x10role_assignments\x18\x03 \x01(\v2(.scalekit.v1.directories.RoleAssignmentsR\x0froleAssignments\"\\\n" +
	"\x0fRoleAssignments\x12I\n" +
	"\vassignments\x18\x01 \x03(\v2'.scalekit.v1.directories.RoleAssignmentR\vassignments\"j\n" +
	"\x13AssignRolesResponse\x12S\n" +
	"\x10role_assignments\x18\x01 \x01(\v2(.scalekit.v1.directories.RoleAssignmentsR\x0froleAssignments\"\x99\x02\n" +
	"\x0eRoleAssignment\x12_\n" +
	"\bgroup_id\x18\x01 \x01(\tBD\x92A82\x1dgroup ID for the role mappingJ\x17\"dirgroup_121312434123\"\xbaH\x06r\x04\x10\x01\x18 R\agroupId\x12?\n" +
	"\trole_name\x18\x02 \x01(\tB\"\xbaH\x1f\xc8\x01\x01r\x1a\x10\x01\x18d2\x14^[a-zA-Z0-9_]{1,64}$R\broleName\x12e\n" +
	"\arole_id\x18\x03 \x01(\tBL\x92A32\x1crole ID for the role mappingJ\x13\"role_121312434123\"\xbaH\x04r\x02\x18 \xfa\xd2\xe4\x93\x02\t\x12\aPREVIEWR\x06roleId\"\xcd\x01\n" +
	"\x17UpdateAttributesRequest\x128\n" +
	"\x0forganization_id\x18\x01 \x01(\tB\x0f\xbaH\fr\n" +
	"\x10\x01\x18 :\x04org_R\x0eorganizationId\x12\x1f\n" +
	"\x02id\x18\x02 \x01(\tB\x0f\xbaH\fr\n" +
	"\x10\x01\x18 :\x04dir_R\x02id\x12W\n" +
	"\x11attribute_mapping\x18\x03 \x01(\v2*.scalekit.v1.directories.AttributeMappingsR\x10attributeMapping\"^\n" +
	"\x11AttributeMappings\x12I\n" +
	"\n" +
	"attributes\x18\x01 \x03(\v2).scalekit.v1.directories.AttributeMappingR\n" +
	"attributes\"W\n" +
	"\x10AttributeMapping\x12\x1e\n" +
	"\x03key\x18\x01 \x01(\tB\f\xbaH\t\xc8\x01\x01r\x04\x10\x01\x18 R\x03key\x12#\n" +
	"\x06map_to\x18\x02 \x01(\tB\f\xbaH\t\xc8\x01\x01r\x04\x10\x01\x18 R\x05mapTo\"u\n" +
	"\x18UpdateAttributesResponse\x12Y\n" +
	"\x12attribute_mappings\x18\x01 \x01(\v2*.scalekit.v1.directories.AttributeMappingsR\x11attributeMappings\"y\n" +
	"\x16DeleteDirectoryRequest\x128\n" +
	"\x0forganization_id\x18\x01 \x01(\tB\x0f\xbaH\fr\n" +
	"\x10\x01\x18 :\x04org_R\x0eorganizationId\x12\x1f\n" +
	"\x02id\x18\x03 \x01(\tB\x0f\xbaH\fr\n" +
	"\x10\x01\x18 :\x04dir_R\x02idJ\x04\b\x02\x10\x03\"\xfb\x01\n" +
	"\x1bTriggerDirectorySyncRequest\x12h\n" +
	"\fdirectory_id\x18\x01 \x01(\tBE\x92A92 Unique identifier of a DirectoryJ\x15\"dir_121312434123312\"\xbaH\x06r\x04\x10\x01\x18 R\vdirectoryId\x12r\n" +
	"\x0forganization_id\x18\x02 \x01(\tBI\x92A=2$Unique identifier to an OrganizationJ\x15\"org_121312434123312\"\xbaH\x06r\x04\x10\x01\x18 R\x0eorganizationId*M\n" +
	"\rDirectoryType\x12\x1e\n" +
	"\x1aDIRECTORY_TYPE_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04SCIM\x10\x01\x12\b\n" +
	"\x04LDAP\x10\x02\x12\b\n" +
	"\x04POLL\x10\x03*\x9a\x01\n" +
	"\x11DirectoryProvider\x12\"\n" +
	"\x1eDIRECTORY_PROVIDER_UNSPECIFIED\x10\x00\x12\b\n" +
	"\x04OKTA\x10\x01\x12\n" +
	"\n" +
	"\x06GOOGLE\x10\x02\x12\x10\n" +
	"\fMICROSOFT_AD\x10\x03\x12\t\n" +
	"\x05AUTH0\x10\x04\x12\f\n" +
	"\bONELOGIN\x10\x05\x12\r\n" +
	"\tJUMPCLOUD\x10\x06\x12\x11\n" +
	"\rPING_IDENTITY\x10\a*^\n" +
	"\x0fDirectoryStatus\x12 \n" +
	"\x1cDIRECTORY_STATUS_UNSPECIFIED\x10\x00\x12\t\n" +
	"\x05DRAFT\x10\x01\x12\x0f\n" +
	"\vIN_PROGRESS\x10\x02\x12\r\n" +
	"\tCOMPLETED\x10\x03*(\n" +
	"\fSecretStatus\x12\n" +
	"\n" +
	"\x06ACTIVE\x10\x00\x12\f\n" +
	"\bINACTIVE\x10\x012\xa4-\n" +
	"\x10DirectoryService\x12\xd1\x01\n" +
	"\x0fCreateDirectory\x12/.scalekit.v1.directories.CreateDirectoryRequest\x1a0.scalekit.v1.directories.CreateDirectoryResponse\"[\x82\xb5\x18\x02\x18t\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEW\x82\xd3\xe4\x93\x02@:\tdirectory\"3/api/v1/organizations/{organization_id}/directories\x12\x9e\x02\n" +
	"\x0fDeleteDirectory\x12/.scalekit.v1.directories.DeleteDirectoryRequest\x1a\x16.google.protobuf.Empty\"\xc1\x01\x92Ai\n" +
	"\tDirectory\x12\x12Delete a Directory\x1a)Delete a Directory within an organizationJ\x1d\n" +
	"\x03200\x12\x16\n" +
	"\x14Deleted Successfully\x82\xb5\x18\x02\x18t\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEW\x82\xd3\xe4\x93\x02:*8/api/v1/organizations/{organization_id}/directories/{id}\x12\xd6\x01\n" +
	"\x0fUpdateDirectory\x12/.scalekit.v1.directories.UpdateDirectoryRequest\x1a0.scalekit.v1.directories.UpdateDirectoryResponse\"`\x82\xb5\x18\x02\x18t\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEW\x82\xd3\xe4\x93\x02E:\tdirectory28/api/v1/organizations/{organization_id}/directories/{id}\x12\xd4\x01\n" +
	"\x18AssignGroupsForDirectory\x128.scalekit.v1.directories.AssignGroupsForDirectoryRequest\x1a\x16.google.protobuf.Empty\"f\x82\xb5\x18\x02\x18t\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEW\x82\xd3\xe4\x93\x02K:\x01*\x1aF/api/v1/organizations/{organization_id}/directories/{id}/groups:assign\x12\xe7\x01\n" +
	"\vAssignRoles\x12+.scalekit.v1.directories.AssignRolesRequest\x1a,.scalekit.v1.directories.AssignRolesResponse\"}\x82\xb5\x18\x02\x18t\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEW\x82\xd3\xe4\x93\x02b:\x10role_assignments\x1aN/api/v1/organizations/{organization_id}/directories/{id}/groups/-/roles:assign\x12\xec\x01\n" +
	"\x10UpdateAttributes\x120.scalekit.v1.directories.UpdateAttributesRequest\x1a1.scalekit.v1.directories.UpdateAttributesResponse\"s\x82\xb5\x18\x02\x18t\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEW\x82\xd3\xe4\x93\x02X:\x11attribute_mapping\x1aC/api/v1/organizations/{organization_id}/directories/{id}/attributes\x12\x92\x03\n" +
	"\fGetDirectory\x12,.scalekit.v1.directories.GetDirectoryRequest\x1a-.scalekit.v1.directories.GetDirectoryResponse\"\xa4\x02\x92A\xda\x01\n" +
	"\tDirectory\x12\x15Get Directory details\x1aPRetrieves detailed information about a specific directory within an organizationJd\n" +
	"\x03200\x12]\n" +
	"(Successfully retrieved directory details\x121\n" +
	"/\x1a-.scalekit.v1.directories.GetDirectoryResponse\x82\xb5\x18\x02\x18t\x82\xd3\xe4\x93\x02:\x128/api/v1/organizations/{organization_id}/directories/{id}\x12\xeb\x02\n" +
	"\x0fListDirectories\x12/.scalekit.v1.directories.ListDirectoriesRequest\x1a0.scalekit.v1.directories.ListDirectoriesResponse\"\xf4\x01\x92A\xaf\x01\n" +
	"\tDirectory\x12\x1dList Organization DirectoriesJ\x82\x01\n" +
	"\x03200\x12{\n" +
	"CSuccessfully retrieved the list of directories for the organization\x124\n" +
	"2\x1a0.scalekit.v1.directories.ListDirectoriesResponse\x82\xb5\x18\x02\x18t\x82\xd3\xe4\x93\x025\x123/api/v1/organizations/{organization_id}/directories\x12\xb0\x03\n" +
	"\x0fEnableDirectory\x12/.scalekit.v1.directories.ToggleDirectoryRequest\x1a0.scalekit.v1.directories.ToggleDirectoryResponse\"\xb9\x02\x92A\xe8\x01\n" +
	"\tDirectory\x12\x12Enable a Directory\x1a\x7fActivates a directory within an organization, allowing it to synchronize users and groups with the connected Directory providerJF\n" +
	"\x03200\x12?\n" +
	"\aSuccess\x124\n" +
	"2\x1a0.scalekit.v1.directories.ToggleDirectoryResponse\x82\xb5\x18\x02\x18t\x82\xd3\xe4\x93\x02A2?/api/v1/organizations/{organization_id}/directories/{id}:enable\x12\xfb\x03\n" +
	"\x10DisableDirectory\x12/.scalekit.v1.directories.ToggleDirectoryRequest\x1a0.scalekit.v1.directories.ToggleDirectoryResponse\"\x83\x03\x92A\xb1\x02\n" +
	"\tDirectory\x12\x13Disable a Directory\x1a\xaa\x01Stops synchronization of users and groups from a specified directory within an organization. This operation prevents further updates from the connected Directory providerJb\n" +
	"\x03200\x12[\n" +
	"#Successfully disabled the directory\x124\n" +
	"2\x1a0.scalekit.v1.directories.ToggleDirectoryResponse\x82\xb5\x18\x02\x18t\x82\xd3\xe4\x93\x02B2@/api/v1/organizations/{organization_id}/directories/{id}:disable\x12\xbb\x04\n" +
	"\x12ListDirectoryUsers\x122.scalekit.v1.directories.ListDirectoryUsersRequest\x1a3.scalekit.v1.directories.ListDirectoryUsersResponse\"\xbb\x03\x92A\xe1\x02\n" +
	"\tDirectory\x12\x14List Directory Users\x1a\xb2\x01Retrieves a list of all users within a specified directory for an organization. This endpoint allows you to view user accounts associated with your connected Directory Providers.J\x88\x01\n" +
	"\x03200\x12\x80\x01\n" +
	"ESuccessfully retrieved the list of users from the specified directory\x127\n" +
	"5\x1a3.scalekit.v1.directories.ListDirectoryUsersResponse\x82\xb5\x18\x02\x18t\x82\xd3\xe4\x93\x02J\x12H/api/v1/organizations/{organization_id}/directories/{directory_id}/users\x12\x92\x04\n" +
	"\x13ListDirectoryGroups\x123.scalekit.v1.directories.ListDirectoryGroupsRequest\x1a4.scalekit.v1.directories.ListDirectoryGroupsResponse\"\x8f\x03\x92A\xb4\x02\n" +
	"\tDirectory\x12\x15List Directory Groups\x1a\x82\x01Retrieves all groups from a specified directory. Use this endpoint to view group structures from your connected identity provider.J\x8a\x01\n" +
	"\x03200\x12\x82\x01\n" +
	"FSuccessfully retrieved the list of groups from the specified directory\x128\n" +
	"6\x1a4.scalekit.v1.directories.ListDirectoryGroupsResponse\x82\xb5\x18\x02\x18t\x82\xd3\xe4\x93\x02K\x12I/api/v1/organizations/{organization_id}/directories/{directory_id}/groups\x12\xc1\x04\n" +
	"\x1aListDirectoryGroupsSummary\x12:.scalekit.v1.directories.ListDirectoryGroupsSummaryRequest\x1a4.scalekit.v1.directories.ListDirectoryGroupsResponse\"\xb0\x03\x92A\xbe\x02\n" +
	"\tDirectory\x12\x1dList Directory Groups Summary\x1a\x84\x01Retrieves all groups from a specified directory. This is not a paginated api. It gives a summary view with id and name of the group.J\x8a\x01\n" +
	"\x03200\x12\x82\x01\n" +
	"FSuccessfully retrieved the list of groups from the specified directory\x128\n" +
	"6\x1a4.scalekit.v1.directories.ListDirectoryGroupsResponse\x82\xb5\x18\x02\x18t\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEW\x82\xd3\xe4\x93\x02S\x12Q/api/v1/organizations/{organization_id}/directories/{directory_id}/groups/summary\x12\xeb\x02\n" +
	"\x15CreateDirectorySecret\x125.scalekit.v1.directories.CreateDirectorySecretRequest\x1a6.scalekit.v1.directories.CreateDirectorySecretResponse\"\xe2\x01\x92Ax\n" +
	"\tDirectory\x12\x1dCreate Secret for a DirectoryJL\n" +
	"\x03200\x12E\n" +
	"\aSuccess\x12:\n" +
	"8\x1a6.scalekit.v1.directories.CreateDirectorySecretResponse\x82\xb5\x18\x02\x18t\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEW\x82\xd3\xe4\x93\x02L\"J/api/v1/organizations/{organization_id}/directories/{directory_id}/secrets\x12\x8b\x03\n" +
	"\x19RegenerateDirectorySecret\x129.scalekit.v1.directories.RegenerateDirectorySecretRequest\x1a:.scalekit.v1.directories.RegenerateDirectorySecretResponse\"\xf6\x01\x92A\x80\x01\n" +
	"\tDirectory\x12!Regenerate Secret for a DirectoryJP\n" +
	"\x03200\x12I\n" +
	"\aSuccess\x12>\n" +
	"<\x1a:.scalekit.v1.directories.RegenerateDirectorySecretResponse\x82\xb5\x18\x02\x18t\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEW\x82\xd3\xe4\x93\x02W\"U/api/v1/organizations/{organization_id}/directories/{directory_id}/secrets:regenerate\x12\xca\x01\n" +
	"\x14TriggerDirectorySync\x124.scalekit.v1.directories.TriggerDirectorySyncRequest\x1a\x16.google.protobuf.Empty\"d\x82\xb5\x18\x02\x18t\xfa\xd2\xe4\x93\x02\t\x12\aPREVIEW\x82\xd3\xe4\x93\x02I\x12G/api/v1/organizations/{organization_id}/directories/{directory_id}:syncB\xf7\x01\n" +
	"\x1bcom.scalekit.v1.directoriesB\x10DirectoriesProtoP\x01ZHgithub.com/scalekit-inc/scalekit-sdk-go/pkg/grpc/scalekit/v1/directories\xa2\x02\x03SVD\xaa\x02\x17Scalekit.V1.Directories\xca\x02\x17Scalekit\\V1\\Directories\xe2\x02#Scalekit\\V1\\Directories\\GPBMetadata\xea\x02\x19Scalekit::V1::Directoriesb\x06proto3"

var (
	file_scalekit_v1_directories_directories_proto_rawDescOnce sync.Once
	file_scalekit_v1_directories_directories_proto_rawDescData []byte
)

func file_scalekit_v1_directories_directories_proto_rawDescGZIP() []byte {
	file_scalekit_v1_directories_directories_proto_rawDescOnce.Do(func() {
		file_scalekit_v1_directories_directories_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_scalekit_v1_directories_directories_proto_rawDesc), len(file_scalekit_v1_directories_directories_proto_rawDesc)))
	})
	return file_scalekit_v1_directories_directories_proto_rawDescData
}

var file_scalekit_v1_directories_directories_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_scalekit_v1_directories_directories_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_scalekit_v1_directories_directories_proto_goTypes = []any{
	(DirectoryType)(0),                        // 0: scalekit.v1.directories.DirectoryType
	(DirectoryProvider)(0),                    // 1: scalekit.v1.directories.DirectoryProvider
	(DirectoryStatus)(0),                      // 2: scalekit.v1.directories.DirectoryStatus
	(SecretStatus)(0),                         // 3: scalekit.v1.directories.SecretStatus
	(*GetDirectoryRequest)(nil),               // 4: scalekit.v1.directories.GetDirectoryRequest
	(*GetDirectoryResponse)(nil),              // 5: scalekit.v1.directories.GetDirectoryResponse
	(*CreateDirectoryRequest)(nil),            // 6: scalekit.v1.directories.CreateDirectoryRequest
	(*CreateDirectory)(nil),                   // 7: scalekit.v1.directories.CreateDirectory
	(*CreateDirectoryResponse)(nil),           // 8: scalekit.v1.directories.CreateDirectoryResponse
	(*UpdateDirectoryRequest)(nil),            // 9: scalekit.v1.directories.UpdateDirectoryRequest
	(*UpdateDirectory)(nil),                   // 10: scalekit.v1.directories.UpdateDirectory
	(*UpdateDirectoryResponse)(nil),           // 11: scalekit.v1.directories.UpdateDirectoryResponse
	(*AssignGroupsForDirectoryRequest)(nil),   // 12: scalekit.v1.directories.AssignGroupsForDirectoryRequest
	(*ListDirectoriesRequest)(nil),            // 13: scalekit.v1.directories.ListDirectoriesRequest
	(*ListDirectoriesResponse)(nil),           // 14: scalekit.v1.directories.ListDirectoriesResponse
	(*ListDirectoryUsersRequest)(nil),         // 15: scalekit.v1.directories.ListDirectoryUsersRequest
	(*ListDirectoryUsersResponse)(nil),        // 16: scalekit.v1.directories.ListDirectoryUsersResponse
	(*ListDirectoryGroupsRequest)(nil),        // 17: scalekit.v1.directories.ListDirectoryGroupsRequest
	(*ListDirectoryGroupsResponse)(nil),       // 18: scalekit.v1.directories.ListDirectoryGroupsResponse
	(*ListDirectoryGroupsSummaryRequest)(nil), // 19: scalekit.v1.directories.ListDirectoryGroupsSummaryRequest
	(*Directory)(nil),                         // 20: scalekit.v1.directories.Directory
	(*ToggleDirectoryRequest)(nil),            // 21: scalekit.v1.directories.ToggleDirectoryRequest
	(*ToggleDirectoryResponse)(nil),           // 22: scalekit.v1.directories.ToggleDirectoryResponse
	(*DirectoryMapping)(nil),                  // 23: scalekit.v1.directories.DirectoryMapping
	(*DirectoryUser)(nil),                     // 24: scalekit.v1.directories.DirectoryUser
	(*ExternalGroup)(nil),                     // 25: scalekit.v1.directories.ExternalGroup
	(*DirectoryGroup)(nil),                    // 26: scalekit.v1.directories.DirectoryGroup
	(*CreateDirectorySecretRequest)(nil),      // 27: scalekit.v1.directories.CreateDirectorySecretRequest
	(*CreateDirectorySecretResponse)(nil),     // 28: scalekit.v1.directories.CreateDirectorySecretResponse
	(*RegenerateDirectorySecretRequest)(nil),  // 29: scalekit.v1.directories.RegenerateDirectorySecretRequest
	(*RegenerateDirectorySecretResponse)(nil), // 30: scalekit.v1.directories.RegenerateDirectorySecretResponse
	(*Secret)(nil),                            // 31: scalekit.v1.directories.Secret
	(*Stats)(nil),                             // 32: scalekit.v1.directories.Stats
	(*AssignRolesRequest)(nil),                // 33: scalekit.v1.directories.AssignRolesRequest
	(*RoleAssignments)(nil),                   // 34: scalekit.v1.directories.RoleAssignments
	(*AssignRolesResponse)(nil),               // 35: scalekit.v1.directories.AssignRolesResponse
	(*RoleAssignment)(nil),                    // 36: scalekit.v1.directories.RoleAssignment
	(*UpdateAttributesRequest)(nil),           // 37: scalekit.v1.directories.UpdateAttributesRequest
	(*AttributeMappings)(nil),                 // 38: scalekit.v1.directories.AttributeMappings
	(*AttributeMapping)(nil),                  // 39: scalekit.v1.directories.AttributeMapping
	(*UpdateAttributesResponse)(nil),          // 40: scalekit.v1.directories.UpdateAttributesResponse
	(*DeleteDirectoryRequest)(nil),            // 41: scalekit.v1.directories.DeleteDirectoryRequest
	(*TriggerDirectorySyncRequest)(nil),       // 42: scalekit.v1.directories.TriggerDirectorySyncRequest
	(*timestamppb.Timestamp)(nil),             // 43: google.protobuf.Timestamp
	(*structpb.Struct)(nil),                   // 44: google.protobuf.Struct
	(*emptypb.Empty)(nil),                     // 45: google.protobuf.Empty
}
var file_scalekit_v1_directories_directories_proto_depIdxs = []int32{
	20, // 0: scalekit.v1.directories.GetDirectoryResponse.directory:type_name -> scalekit.v1.directories.Directory
	7,  // 1: scalekit.v1.directories.CreateDirectoryRequest.directory:type_name -> scalekit.v1.directories.CreateDirectory
	0,  // 2: scalekit.v1.directories.CreateDirectory.directory_type:type_name -> scalekit.v1.directories.DirectoryType
	1,  // 3: scalekit.v1.directories.CreateDirectory.directory_provider:type_name -> scalekit.v1.directories.DirectoryProvider
	20, // 4: scalekit.v1.directories.CreateDirectoryResponse.directory:type_name -> scalekit.v1.directories.Directory
	10, // 5: scalekit.v1.directories.UpdateDirectoryRequest.directory:type_name -> scalekit.v1.directories.UpdateDirectory
	0,  // 6: scalekit.v1.directories.UpdateDirectory.directory_type:type_name -> scalekit.v1.directories.DirectoryType
	1,  // 7: scalekit.v1.directories.UpdateDirectory.directory_provider:type_name -> scalekit.v1.directories.DirectoryProvider
	2,  // 8: scalekit.v1.directories.UpdateDirectory.status:type_name -> scalekit.v1.directories.DirectoryStatus
	23, // 9: scalekit.v1.directories.UpdateDirectory.mappings:type_name -> scalekit.v1.directories.DirectoryMapping
	25, // 10: scalekit.v1.directories.UpdateDirectory.groups:type_name -> scalekit.v1.directories.ExternalGroup
	20, // 11: scalekit.v1.directories.UpdateDirectoryResponse.directory:type_name -> scalekit.v1.directories.Directory
	20, // 12: scalekit.v1.directories.ListDirectoriesResponse.directories:type_name -> scalekit.v1.directories.Directory
	43, // 13: scalekit.v1.directories.ListDirectoryUsersRequest.updated_after:type_name -> google.protobuf.Timestamp
	24, // 14: scalekit.v1.directories.ListDirectoryUsersResponse.users:type_name -> scalekit.v1.directories.DirectoryUser
	43, // 15: scalekit.v1.directories.ListDirectoryGroupsRequest.updated_after:type_name -> google.protobuf.Timestamp
	26, // 16: scalekit.v1.directories.ListDirectoryGroupsResponse.groups:type_name -> scalekit.v1.directories.DirectoryGroup
	0,  // 17: scalekit.v1.directories.Directory.directory_type:type_name -> scalekit.v1.directories.DirectoryType
	1,  // 18: scalekit.v1.directories.Directory.directory_provider:type_name -> scalekit.v1.directories.DirectoryProvider
	43, // 19: scalekit.v1.directories.Directory.last_synced_at:type_name -> google.protobuf.Timestamp
	31, // 20: scalekit.v1.directories.Directory.secrets:type_name -> scalekit.v1.directories.Secret
	32, // 21: scalekit.v1.directories.Directory.stats:type_name -> scalekit.v1.directories.Stats
	34, // 22: scalekit.v1.directories.Directory.role_assignments:type_name -> scalekit.v1.directories.RoleAssignments
	38, // 23: scalekit.v1.directories.Directory.attribute_mappings:type_name -> scalekit.v1.directories.AttributeMappings
	43, // 24: scalekit.v1.directories.DirectoryUser.updated_at:type_name -> google.protobuf.Timestamp
	26, // 25: scalekit.v1.directories.DirectoryUser.groups:type_name -> scalekit.v1.directories.DirectoryGroup
	44, // 26: scalekit.v1.directories.DirectoryUser.user_detail:type_name -> google.protobuf.Struct
	43, // 27: scalekit.v1.directories.DirectoryGroup.updated_at:type_name -> google.protobuf.Timestamp
	44, // 28: scalekit.v1.directories.DirectoryGroup.group_detail:type_name -> google.protobuf.Struct
	31, // 29: scalekit.v1.directories.CreateDirectorySecretResponse.secret:type_name -> scalekit.v1.directories.Secret
	31, // 30: scalekit.v1.directories.RegenerateDirectorySecretResponse.secret:type_name -> scalekit.v1.directories.Secret
	43, // 31: scalekit.v1.directories.Secret.create_time:type_name -> google.protobuf.Timestamp
	3,  // 32: scalekit.v1.directories.Secret.status:type_name -> scalekit.v1.directories.SecretStatus
	43, // 33: scalekit.v1.directories.Secret.expire_time:type_name -> google.protobuf.Timestamp
	43, // 34: scalekit.v1.directories.Secret.last_used_time:type_name -> google.protobuf.Timestamp
	43, // 35: scalekit.v1.directories.Stats.group_updated_at:type_name -> google.protobuf.Timestamp
	43, // 36: scalekit.v1.directories.Stats.user_updated_at:type_name -> google.protobuf.Timestamp
	34, // 37: scalekit.v1.directories.AssignRolesRequest.role_assignments:type_name -> scalekit.v1.directories.RoleAssignments
	36, // 38: scalekit.v1.directories.RoleAssignments.assignments:type_name -> scalekit.v1.directories.RoleAssignment
	34, // 39: scalekit.v1.directories.AssignRolesResponse.role_assignments:type_name -> scalekit.v1.directories.RoleAssignments
	38, // 40: scalekit.v1.directories.UpdateAttributesRequest.attribute_mapping:type_name -> scalekit.v1.directories.AttributeMappings
	39, // 41: scalekit.v1.directories.AttributeMappings.attributes:type_name -> scalekit.v1.directories.AttributeMapping
	38, // 42: scalekit.v1.directories.UpdateAttributesResponse.attribute_mappings:type_name -> scalekit.v1.directories.AttributeMappings
	6,  // 43: scalekit.v1.directories.DirectoryService.CreateDirectory:input_type -> scalekit.v1.directories.CreateDirectoryRequest
	41, // 44: scalekit.v1.directories.DirectoryService.DeleteDirectory:input_type -> scalekit.v1.directories.DeleteDirectoryRequest
	9,  // 45: scalekit.v1.directories.DirectoryService.UpdateDirectory:input_type -> scalekit.v1.directories.UpdateDirectoryRequest
	12, // 46: scalekit.v1.directories.DirectoryService.AssignGroupsForDirectory:input_type -> scalekit.v1.directories.AssignGroupsForDirectoryRequest
	33, // 47: scalekit.v1.directories.DirectoryService.AssignRoles:input_type -> scalekit.v1.directories.AssignRolesRequest
	37, // 48: scalekit.v1.directories.DirectoryService.UpdateAttributes:input_type -> scalekit.v1.directories.UpdateAttributesRequest
	4,  // 49: scalekit.v1.directories.DirectoryService.GetDirectory:input_type -> scalekit.v1.directories.GetDirectoryRequest
	13, // 50: scalekit.v1.directories.DirectoryService.ListDirectories:input_type -> scalekit.v1.directories.ListDirectoriesRequest
	21, // 51: scalekit.v1.directories.DirectoryService.EnableDirectory:input_type -> scalekit.v1.directories.ToggleDirectoryRequest
	21, // 52: scalekit.v1.directories.DirectoryService.DisableDirectory:input_type -> scalekit.v1.directories.ToggleDirectoryRequest
	15, // 53: scalekit.v1.directories.DirectoryService.ListDirectoryUsers:input_type -> scalekit.v1.directories.ListDirectoryUsersRequest
	17, // 54: scalekit.v1.directories.DirectoryService.ListDirectoryGroups:input_type -> scalekit.v1.directories.ListDirectoryGroupsRequest
	19, // 55: scalekit.v1.directories.DirectoryService.ListDirectoryGroupsSummary:input_type -> scalekit.v1.directories.ListDirectoryGroupsSummaryRequest
	27, // 56: scalekit.v1.directories.DirectoryService.CreateDirectorySecret:input_type -> scalekit.v1.directories.CreateDirectorySecretRequest
	29, // 57: scalekit.v1.directories.DirectoryService.RegenerateDirectorySecret:input_type -> scalekit.v1.directories.RegenerateDirectorySecretRequest
	42, // 58: scalekit.v1.directories.DirectoryService.TriggerDirectorySync:input_type -> scalekit.v1.directories.TriggerDirectorySyncRequest
	8,  // 59: scalekit.v1.directories.DirectoryService.CreateDirectory:output_type -> scalekit.v1.directories.CreateDirectoryResponse
	45, // 60: scalekit.v1.directories.DirectoryService.DeleteDirectory:output_type -> google.protobuf.Empty
	11, // 61: scalekit.v1.directories.DirectoryService.UpdateDirectory:output_type -> scalekit.v1.directories.UpdateDirectoryResponse
	45, // 62: scalekit.v1.directories.DirectoryService.AssignGroupsForDirectory:output_type -> google.protobuf.Empty
	35, // 63: scalekit.v1.directories.DirectoryService.AssignRoles:output_type -> scalekit.v1.directories.AssignRolesResponse
	40, // 64: scalekit.v1.directories.DirectoryService.UpdateAttributes:output_type -> scalekit.v1.directories.UpdateAttributesResponse
	5,  // 65: scalekit.v1.directories.DirectoryService.GetDirectory:output_type -> scalekit.v1.directories.GetDirectoryResponse
	14, // 66: scalekit.v1.directories.DirectoryService.ListDirectories:output_type -> scalekit.v1.directories.ListDirectoriesResponse
	22, // 67: scalekit.v1.directories.DirectoryService.EnableDirectory:output_type -> scalekit.v1.directories.ToggleDirectoryResponse
	22, // 68: scalekit.v1.directories.DirectoryService.DisableDirectory:output_type -> scalekit.v1.directories.ToggleDirectoryResponse
	16, // 69: scalekit.v1.directories.DirectoryService.ListDirectoryUsers:output_type -> scalekit.v1.directories.ListDirectoryUsersResponse
	18, // 70: scalekit.v1.directories.DirectoryService.ListDirectoryGroups:output_type -> scalekit.v1.directories.ListDirectoryGroupsResponse
	18, // 71: scalekit.v1.directories.DirectoryService.ListDirectoryGroupsSummary:output_type -> scalekit.v1.directories.ListDirectoryGroupsResponse
	28, // 72: scalekit.v1.directories.DirectoryService.CreateDirectorySecret:output_type -> scalekit.v1.directories.CreateDirectorySecretResponse
	30, // 73: scalekit.v1.directories.DirectoryService.RegenerateDirectorySecret:output_type -> scalekit.v1.directories.RegenerateDirectorySecretResponse
	45, // 74: scalekit.v1.directories.DirectoryService.TriggerDirectorySync:output_type -> google.protobuf.Empty
	59, // [59:75] is the sub-list for method output_type
	43, // [43:59] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_scalekit_v1_directories_directories_proto_init() }
func file_scalekit_v1_directories_directories_proto_init() {
	if File_scalekit_v1_directories_directories_proto != nil {
		return
	}
	file_scalekit_v1_directories_directories_proto_msgTypes[11].OneofWrappers = []any{}
	file_scalekit_v1_directories_directories_proto_msgTypes[13].OneofWrappers = []any{}
	file_scalekit_v1_directories_directories_proto_msgTypes[18].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_scalekit_v1_directories_directories_proto_rawDesc), len(file_scalekit_v1_directories_directories_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scalekit_v1_directories_directories_proto_goTypes,
		DependencyIndexes: file_scalekit_v1_directories_directories_proto_depIdxs,
		EnumInfos:         file_scalekit_v1_directories_directories_proto_enumTypes,
		MessageInfos:      file_scalekit_v1_directories_directories_proto_msgTypes,
	}.Build()
	File_scalekit_v1_directories_directories_proto = out.File
	file_scalekit_v1_directories_directories_proto_goTypes = nil
	file_scalekit_v1_directories_directories_proto_depIdxs = nil
}
